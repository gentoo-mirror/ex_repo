<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "https://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="person" proxied="proxy">
		<email>lg3dx6fd@gmail.com</email>
		<name>Arniiiii</name>
		<description>Just a guy that likes C++ and uses CMake.</description>
	</maintainer>
	<use>
		<flag name="mpi">Set to ON if Boost libraries depending on MPI should be built. https://github.com/boostorg/cmake/tree/7f5336b3bf8067bb40da4e8b9940c133271e938a?tab=readme-ov-file</flag>
		<flag name="python">Set to ON if Boost libraries depending on Python should be built. https://github.com/boostorg/cmake/tree/7f5336b3bf8067bb40da4e8b9940c133271e938a?tab=readme-ov-file</flag>
		<flag name="static">Set to ON if Boost libraries should be build as static libraries. https://github.com/boostorg/cmake/tree/7f5336b3bf8067bb40da4e8b9940c133271e938a?tab=readme-ov-file</flag>
		<flag name="boost-context-fcontext">Boost.Context implementation. Default on not-windows OS. https://www.boost.org/doc/libs/1_87_0/libs/context/doc/html/context/cc/implementations__fcontext_t__ucontext_t_and_winfiber.html</flag>
		<flag name="boost-context-ucontext">Boost.Context implementation. Deprecated. https://www.boost.org/doc/libs/1_87_0/libs/context/doc/html/context/cc/implementations__fcontext_t__ucontext_t_and_winfiber.html</flag>
		<flag name="boost-context-winfib">Boost.Context implementation. Windows only. https://www.boost.org/doc/libs/1_87_0/libs/context/doc/html/context/cc/implementations__fcontext_t__ucontext_t_and_winfiber.html</flag>
		<flag name="boost-locale-icu">When ON, enables the ICU backend. Defaults to ON when ICU is found, OFF otherwise. https://github.com/boostorg/cmake/tree/7f5336b3bf8067bb40da4e8b9940c133271e938a?tab=readme-ov-file</flag>
		<flag name="boost-locale-iconv">When ON, enables the Iconv backend. Defaults to ON when iconv is found, OFF otherwise. https://github.com/boostorg/cmake/tree/7f5336b3bf8067bb40da4e8b9940c133271e938a?tab=readme-ov-file</flag>
		<flag name="boost-locale-posix">When ON, enables the POSIX backend. Defaults to ON on POSIX systems, OFF otherwise. https://github.com/boostorg/cmake/tree/7f5336b3bf8067bb40da4e8b9940c133271e938a?tab=readme-ov-file</flag>
		<flag name="boost-locale-std">When ON, enables the std::locale backend. Defaults to ON. https://github.com/boostorg/cmake/tree/7f5336b3bf8067bb40da4e8b9940c133271e938a?tab=readme-ov-file</flag>
		<flag name="boost-locale-winapi">When ON, enables the Windows API backend. Defaults to ON under Windows, OFF otherwise. https://github.com/boostorg/cmake/tree/7f5336b3bf8067bb40da4e8b9940c133271e938a?tab=readme-ov-file</flag>
		<flag name="boost-thread-pthread">Threading API, pthread or win32. Defaults to win32 under Windows, pthread otherwise.</flag>
		<flag name="boost-thread-win32">Threading API, pthread or win32. Defaults to win32 under Windows, pthread otherwise.</flag>
		<flag name="boost-iostream-zlib">When ON, enables ZLib support. Defaults to ON when zlib is found, OFF otherwise.</flag>
		<flag name="boost-iostream-bzip2">When ON, enables BZip2 support. Defaults to ON when libbzip2 is found, OFF otherwise.</flag>
		<flag name="boost-iostream-lzma">When ON, enables LZMA support. Defaults to ON when liblzma is found, OFF otherwise.</flag>
		<flag name="boost-iostream-zstd">When ON, enables Zstd support. Defaults to ON when libzstd is found, OFF otherwise.</flag>
		<flag name="numpy">lol, yet another USE flag for compability with gentoo's ebuild. Always enabled. If you try disable it, get destroyed.</flag>
		<flag name="zlib">yet another USE flag for compability with gentoo's ebuild. Requires boost-iostream-zlib</flag>
		<flag name="bzip2">yet another USE flag for compability with gentoo's ebuild. Requires boost-iostream-bzip2</flag>
		<flag name="lzma">yet another USE flag for compability with gentoo's ebuild. Requires boost-iostream-lzma</flag>
		<flag name="zstd">yet another USE flag for compability with gentoo's ebuild. Requires boost-iostream-zstd</flag>
		<flag name="context">yet another USE flag for compability with gentoo's ebuild. Requires any boost-context-* flag.</flag>
		<flag name="stacktrace">yet another USE flag for compability with gentoo's ebuild. WARNING: you can enable multiple boost-stacktrace-* USE flags, but the logic of what will be the Boost::stacktrace cmake's target is a default priority on top of if the stacktrace backend is possible: windbg -> backtrace -> addr2line -> basic -> noop. At least that how it is now (march 2025)</flag>
		<flag name="boost-stacktrace-noop">Boost.Stacktrace: build boost_stacktrace_noop</flag>
		<flag name="boost-stacktrace-backtrace">Boost.Stacktrace: build boost_stacktrace_backtrace</flag>
		<flag name="boost-stacktrace-addr2line">Boost.Stacktrace: build boost_stacktrace_addr2line</flag>
		<flag name="boost-stacktrace-basic">Boost.Stacktrace: build boost_stacktrace_basic</flag>
		<flag name="boost-stacktrace-windbg">Boost.Stacktrace: build boost_stacktrace_windbg</flag>
		<flag name="boost-stacktrace-windbg-cached">Boost.Stacktrace: build boost_stacktrace_windbg_cached</flag>
		<flag name="boost-stacktrace-from-exception">Boost.Stacktrace: build boost_stacktrace_from_exception</flag>
	</use>
	<upstream>
		<remote-id type="github">boostorg/boost</remote-id>
	</upstream>
</pkgmetadata>
