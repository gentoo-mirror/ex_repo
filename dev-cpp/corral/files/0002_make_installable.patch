diff --git a/CMakeLists.txt b/CMakeLists.txt
index ee06f66..1663e71 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,5 +1,6 @@
 cmake_minimum_required(VERSION 3.0)
 project(corral)
+project(corral VERSION 0.0.1)
 
 set(CMAKE_CXX_STANDARD 20)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
@@ -44,7 +45,7 @@ add_library(
   corral/detail/wait.h
 )
 
-target_include_directories(corral INTERFACE ${CMAKE_CURRENT_SOURCE_DIR})
+target_include_directories(corral INTERFACE $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<INSTALL_INTERFACE:include>)
 
 if(BUILD_TESTING)
 
@@ -142,12 +143,25 @@ endif()
 # Installation
 #
 
-install(DIRECTORY corral DESTINATION include)
-install(
-  TARGETS corral
-  EXPORT corralTargets
-  INCLUDES
-  DESTINATION include
+include(./cmake/getCPM.cmake)
+
+CPMAddPackage(
+  NAME PackageProject.cmake
+  URL "https://github.com/Arniiiii/PackageProject.cmake/archive/refs/tags/13.0.5.tar.gz"
+)
+
+
+packageProject(
+  NAME ${PROJECT_NAME}
+  VERSION ${PROJECT_VERSION}
+  NAMESPACE ${PROJECT_NAME}
+  BINARY_DIR ${PROJECT_BINARY_DIR}
+  INCLUDE_DIR ${PROJECT_SOURCE_DIR}/corral
+  INCLUDE_DESTINATION include/${PROJECT_NAME}
+  INCLUDE_HEADER_PATTERN "*.h"
+  VERSION_HEADER "${VERSION_HEADER_LOCATION}" EXPORT_HEADER
+                                              "${EXPORT_HEADER_LOCATION}"
+  COMPATIBILITY "AnyNewerVersion" DISABLE_VERSION_SUFFIX ON
 )
 
 #
diff --git a/cmake/getCPM.cmake b/cmake/getCPM.cmake
new file mode 100644
index 0000000..4f7a5ac
--- /dev/null
+++ b/cmake/getCPM.cmake
@@ -0,0 +1,27 @@
+# SPDX-License-Identifier: MIT
+#
+# SPDX-FileCopyrightText: Copyright (c) 2019-2023 Lars Melchior and contributors
+if(NOT DEFINED CPM_DOWNLOAD_LOCATION)
+
+set(CPM_DOWNLOAD_VERSION 0.42.0)
+set(CPM_HASH_SUM "2020b4fc42dba44817983e06342e682ecfc3d2f484a581f11cc5731fbe4dce8a")
+
+  if(CPM_SOURCE_CACHE)
+    set(CPM_DOWNLOAD_LOCATION "${CPM_SOURCE_CACHE}/cpm/CPM_${CPM_DOWNLOAD_VERSION}.cmake")
+  elseif(DEFINED ENV{CPM_SOURCE_CACHE})
+    set(CPM_DOWNLOAD_LOCATION "$ENV{CPM_SOURCE_CACHE}/cpm/CPM_${CPM_DOWNLOAD_VERSION}.cmake")
+  else()
+    set(CPM_DOWNLOAD_LOCATION "${CMAKE_BINARY_DIR}/cmake/CPM_${CPM_DOWNLOAD_VERSION}.cmake")
+  endif()
+
+  # Expand relative path. This is important if the provided path contains a tilde (~)
+  get_filename_component(CPM_DOWNLOAD_LOCATION ${CPM_DOWNLOAD_LOCATION} ABSOLUTE)
+
+  file(DOWNLOAD
+       https://github.com/cpm-cmake/CPM.cmake/releases/download/v${CPM_DOWNLOAD_VERSION}/CPM.cmake
+       ${CPM_DOWNLOAD_LOCATION} EXPECTED_HASH SHA256=${CPM_HASH_SUM}
+  )
+
+endif()
+
+include(${CPM_DOWNLOAD_LOCATION})
