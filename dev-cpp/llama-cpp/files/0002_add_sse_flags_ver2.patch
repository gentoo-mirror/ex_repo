diff --git a/ggml/CMakeLists.txt b/ggml/CMakeLists.txt
index d33f843..3ad69f4 100644
--- a/ggml/CMakeLists.txt
+++ b/ggml/CMakeLists.txt
@@ -107,6 +107,14 @@ message(DEBUG "INS_ENB             : ${INS_ENB}")
 option(GGML_CPU_HBM          "ggml: use memkind for CPU HBM" OFF)
 option(GGML_CPU_AARCH64      "ggml: use runtime weight conversion of Q4_0 to Q4_X_X" ON)
 option(GGML_CPU_KLEIDIAI     "ggml: use KleidiAI optimized kernels if applicable" OFF)
+option(GGML_SSE              "ggml: enable SSE"              OFF)
+option(GGML_SSE2             "ggml: enable SSE2"             OFF)
+option(GGML_SSE3             "ggml: enable SSE3"             OFF)
+option(GGML_SSE4             "ggml: enable SSE4"             OFF)
+option(GGML_SSE4A            "ggml: enable SSE4a"            OFF)
+option(GGML_SSE41            "ggml: enable SSE4.1"           OFF)
+option(GGML_SSE42            "ggml: enable SSE4.2"           OFF)
+option(GGML_SSSE3            "ggml: enable SSSE3"            OFF)
 option(GGML_AVX              "ggml: enable AVX"              ${INS_ENB})
 option(GGML_AVX_VNNI         "ggml: enable AVX-VNNI"         OFF)
 option(GGML_AVX2             "ggml: enable AVX2"             ${INS_ENB})
diff --git a/ggml/src/CMakeLists.txt b/ggml/src/CMakeLists.txt
index f00700d..e4b196b 100644
--- a/ggml/src/CMakeLists.txt
+++ b/ggml/src/CMakeLists.txt
@@ -267,6 +267,7 @@ function(ggml_add_cpu_backend_variant tag_name)
     set(GGML_CPU_TAG_NAME ${tag_name})
     # other: OPENMP LLAMAFILE CPU_HBM
     foreach (feat NATIVE
+                  SSE SSE2 SSE3 SSE41 SSE42 SSSE3
                   AVX AVX2 BMI2 AVX_VNNI FMA F16C
                   AVX512 AVX512_VBMI AVX512_VNNI AVX512_BF16
                   AMX_TILE AMX_INT8 AMX_BF16)
@@ -287,13 +288,13 @@ if (GGML_CPU_ALL_VARIANTS)
         message(FATAL_ERROR "GGML_CPU_ALL_VARIANTS requires GGML_BACKEND_DL")
     endif()
     ggml_add_cpu_backend_variant(sandybridge    AVX)
-    ggml_add_cpu_backend_variant(haswell        AVX F16C AVX2 BMI2 FMA)
-    ggml_add_cpu_backend_variant(skylakex       AVX F16C AVX2 BMI2 FMA AVX512)
-    ggml_add_cpu_backend_variant(icelake        AVX F16C AVX2 BMI2 FMA AVX512 AVX512_VBMI AVX512_VNNI)
-    ggml_add_cpu_backend_variant(alderlake      AVX F16C AVX2 BMI2 FMA AVX_VNNI)
+    ggml_add_cpu_backend_variant(haswell        SSE SSE2 SSE3 SSE41 SSE42 SSSE3 AVX F16C AVX2 BMI2 FMA)
+    ggml_add_cpu_backend_variant(skylakex       SSE SSE2 SSE3 SSE41 SSE42 SSSE3 AVX F16C AVX2 BMI2 FMA AVX512)
+    ggml_add_cpu_backend_variant(icelake        SSE SSE2 SSE3 SSE41 SSE42 SSSE3 AVX F16C AVX2 BMI2 FMA AVX512 AVX512_VBMI AVX512_VNNI)
+    ggml_add_cpu_backend_variant(alderlake      SSE SSE2 SSE3 SSE41 SSE42 SSSE3 AVX F16C AVX2 BMI2 FMA AVX_VNNI)
     if (NOT MSVC)
         # MSVC doesn't support AMX
-        ggml_add_cpu_backend_variant(sapphirerapids AVX F16C AVX2 BMI2 FMA AVX512 AVX512_VBMI AVX512_VNNI AVX512_BF16 AMX_TILE AMX_INT8)
+        ggml_add_cpu_backend_variant(sapphirerapids SSE SSE2 SSE3 SSE41 SSE42 SSSE3 AVX F16C AVX2 BMI2 FMA AVX512 AVX512_VBMI AVX512_VNNI AVX512_BF16 AMX_TILE AMX_INT8)
     endif()
 elseif (GGML_CPU)
     ggml_add_cpu_backend_variant_impl("")
diff --git a/ggml/src/ggml-cpu/CMakeLists.txt b/ggml/src/ggml-cpu/CMakeLists.txt
index c8cc32f..6386e52 100644
--- a/ggml/src/ggml-cpu/CMakeLists.txt
+++ b/ggml/src/ggml-cpu/CMakeLists.txt
@@ -250,6 +250,34 @@ function(ggml_add_cpu_backend_variant_impl tag_name)
                     list(APPEND ARCH_FLAGS -mavx)
                     list(APPEND ARCH_DEFINITIONS GGML_AVX)
                 endif()
+                if(GGML_SSE)
+                    list(APPEND ARCH_FLAGS -msse)
+                    list(APPEND ARCH_DEFINITIONS GGML_SSE)
+                endif()
+                if(GGML_SSE2)
+                    list(APPEND ARCH_FLAGS -msse2)
+                    list(APPEND ARCH_DEFINITIONS GGML_SSE2)
+                endif()
+                if(GGML_SSE3)
+                    list(APPEND ARCH_FLAGS -msse3)
+                    list(APPEND ARCH_DEFINITIONS GGML_SSE3)
+                endif()
+                if(GGML_SSE4)
+                    list(APPEND ARCH_FLAGS -msse4)
+                    list(APPEND ARCH_DEFINITIONS GGML_SSE4)
+                endif()
+                if(GGML_SSE4A)
+                    list(APPEND ARCH_FLAGS -msse4a)
+                    list(APPEND ARCH_DEFINITIONS GGML_SSE4A)
+                endif()
+                if(GGML_SSE41)
+                    list(APPEND ARCH_FLAGS -msse4.1)
+                    list(APPEND ARCH_DEFINITIONS GGML_SSE41)
+                endif()
+                if(GGML_SSE42)
+                    list(APPEND ARCH_FLAGS -msse4.2)
+                    list(APPEND ARCH_DEFINITIONS GGML_SSE42)
+                endif()
                 if (GGML_AVX2)
                     list(APPEND ARCH_FLAGS -mavx2)
                     list(APPEND ARCH_DEFINITIONS GGML_AVX2)
